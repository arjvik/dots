#!/bin/bash

# i3lock-fancy-multimonitor
# Shamelessly stolen from guimeira/i3lock-fancy-multimonitor
# Modified using inspiration from pavanjadhaw/betterlockscreen
# Defaults

# Customization
RECTANGLE_COLOR="00000066"
CLOCK_COLOR="ffffffff"
RECTANGLES="rectangle 25,1050 325,970 rectangle 1945,1050 2245,970"
I3LOCK_OPTIONS="-e --pass-media-keys --pass-screen-keys --force-clock --timepos=x+110:h-70 --time-font=sans-serif --veriftext= --wrongtext="
I3LOCK_OPTIONS="$I3LOCK_OPTIONS --timecolor=#$CLOCK_COLOR --datecolor=#$CLOCK_COLOR --indpos=x+280:h-70 --radius=25 --ring-width=4"
I3LOCK_OPTIONS="$I3LOCK_OPTIONS --insidevercolor=00000000 --insidewrongcolor=00000000 --ringwrongcolor=ff0000ff --line-uses-inside"


DISPLAY_RE="([0-9]+)x([0-9]+)\\+([0-9]+)\\+([0-9]+)"
IMAGE_RE="([0-9]+)x([0-9]+)"
FOLDER="$HOME/.config/i3"
LOCK="$FOLDER/lock.png"
TEXT="$FOLDER/text.png"
PARAMS=""
OUTPUT_IMAGE="/tmp/i3lock.png"
DISPLAY_TEXT=false
PIXELATE=false
BLURTYPE="3x3"


# Read user input
POSITIONAL=()
for i in "$@"
do
  case $i in
  -h|--help)
    echo "lock: Syntax: lock [-n|--no-text] [-p|--pixelate] [-b=VAL|--blur=VAL]"
    echo "for correct blur values, read: http://www.imagemagick.org/Usage/blur/#blur_args"
    exit
    shift
    ;;
  -b=*|--blur=*)
    VAL="${i#*=}"
    BLURTYPE=(${VAL//=/ }) 
    shift
    ;;
  -n|--no-text)
    DISPLAY_TEXT=false
    shift # past argument
    ;;
  -p|--pixelate)
    PIXELATE=true
    shift # past argument
    ;;
  *)    # unknown option
    echo "unknown option: $i"
    exit
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
  esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

#Take screenshot:
scrot -z $OUTPUT_IMAGE

#Get dimensions of the lock image:
LOCK_IMAGE_INFO=`identify $LOCK`
[[ $LOCK_IMAGE_INFO =~ $IMAGE_RE ]]
IMAGE_WIDTH=${BASH_REMATCH[1]}
IMAGE_HEIGHT=${BASH_REMATCH[2]}

if $DISPLAY_TEXT ; then
  #Get dimensions of the text image:
  TEXT_IMAGE_INFO=`identify $TEXT`
  [[ $TEXT_IMAGE_INFO =~ $IMAGE_RE ]]
  TEXT_WIDTH=${BASH_REMATCH[1]}
  TEXT_HEIGHT=${BASH_REMATCH[2]}
fi

#Execute xrandr to get information about the monitors:
while read LINE
do
  #If we are reading the line that contains the position information:
  if [[ $LINE =~ $DISPLAY_RE ]]; then
    #Extract information and append some parameters to the ones that will be given to ImageMagick:
    WIDTH=${BASH_REMATCH[1]}
    HEIGHT=${BASH_REMATCH[2]}
    X=${BASH_REMATCH[3]}
    Y=${BASH_REMATCH[4]}
    POS_X=$(($X+$WIDTH/2-$IMAGE_WIDTH/2))
    POS_Y=$(($Y+$HEIGHT/2-$IMAGE_HEIGHT/2))

    PARAMS="$PARAMS '$LOCK' '-geometry' '+$POS_X+$POS_Y' '-composite'"

    if $DISPLAY_TEXT ; then
        TEXT_X=$(($X+$WIDTH/2-$TEXT_WIDTH/2))
        TEXT_Y=$(($Y+$HEIGHT/2-$TEXT_HEIGHT/2+200))
        PARAMS="$PARAMS '$TEXT' '-geometry' '+$TEXT_X+$TEXT_Y' '-composite'"
    fi
  fi
done <<<"`xrandr`"

#Execute ImageMagick:
PARAMS="'$OUTPUT_IMAGE' -level '0%,100%,0.6' -blur '$BLURTYPE' -draw 'fill #$RECTANGLE_COLOR $RECTANGLES' $PARAMS '$OUTPUT_IMAGE'" 

eval convert $PARAMS

#Lock the screen:
i3lock -i $OUTPUT_IMAGE -t $I3LOCK_OPTIONS

#Remove the generated image:
rm $OUTPUT_IMAGE
